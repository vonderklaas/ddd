// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Poll {
  id          String   @id @default(uuid())
  question    String
  category    String   @default("general") // Options: politics, technology, culture, climate, general, custom
  customCategory String? // Only used when category = "custom"
  createdAt   DateTime @default(now())
  expiresAt   DateTime
  isActive    Boolean  @default(true)
  votes       Vote[]
  comments    Comment[]
}

model Vote {
  id                String   @id @default(uuid())
  pollId            String
  poll              Poll     @relation(fields: [pollId], references: [id])
  ipAddress         String
  deviceFingerprint String?  // Store the device fingerprint
  answer            Boolean  // true for YES, false for NO
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  @@unique([pollId, ipAddress])
  @@index([deviceFingerprint]) // Add an index for faster lookups
}

model Comment {
  id                String   @id @default(uuid())
  pollId            String
  poll              Poll     @relation(fields: [pollId], references: [id])
  content           String   @db.VarChar(280) // Limit comment length
  ipAddress         String
  deviceFingerprint String?
  answer            Boolean  // Associated with YES or NO vote
  createdAt         DateTime @default(now())

  @@index([pollId]) // Add an index for faster lookups
}

model Admin {
  id       String @id @default(uuid())
  username String @unique
  password String
}
